name: Move issues to in progress when referenced by a PR

on:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  move-linked-issues-to-in-progress:
    runs-on: ubuntu-latest
    steps:
      - name: Install hub
        run: |
          HUB_ARCH="amd64"
          HUB_VER=$(curl -sL "https://api.github.com/repos/github/hub/releases/latest" |\
            jq -r .tag_name | sed 's/^v//')
          curl -sL \
            "https://github.com/github/hub/releases/download/v${HUB_VER}/hub-linux-${HUB_ARCH}-${HUB_VER}.tgz" |\
          tar xz --strip-components=2 --wildcards '*/bin/hub' && \
          sudo install hub /usr/local/bin

      - name: Install hub extension script
        run: |
          # Clone into a temporary directory to avoid overwriting
          # any existing github directory.
          pushd $(mktemp -d) &>/dev/null
          git clone --single-branch --depth 1 "https://github.com/jamesodhunt-org/.github" && cd .github/scripts
          sudo install kata-hub.sh /usr/local/bin
          popd &>/dev/null

      - name: Checkout code to allow hub to communicate with the project
        uses: actions/checkout@v2

      - name: Move issue to 'In progress'
        env:
          DEBUG: true
          GITHUB_TOKEN: ${{ secrets.JODH_GITHUB_ACTION_TOKEN }}
        run: |
          # FIXME: DEBUG:
          echo "::debug::GITHUB_WORKSPACE"
          echo "$GITHUB_WORKSPACE"

          # FIXME: DEBUG:
          echo "::debug::PWD"
          pwd
          ls -al

          # FIXME: DEBUG:
          echo "::debug::hub"
          command -v hub || true

          # FIXME: DEBUG:
          echo "::debug::hub issues"
          hub issue || true

          # FIXME: DEBUG:
          echo "::debug::hub PRs"
          hub pr list || true

          # FIXME: DEBUG:
          echo "::debug::git details"
          git ls-files -v || true
          git branch || true
          git remote -v || true
          git status || true

          # FIXME: DEBUG:
          echo "::debug::/usr/local/bin:"
          sudo ls -l /usr/local/bin || true

          # FIXME: DEBUG:
          echo "::debug::issues"
          hub issue || true

          pr=${{ github.event.pull_request.number }}
          linked_issue_url=$(kata-hub.sh list-issue-linked-prs |\
            grep -v "^\#" |\
            grep "/pull/${pr};" |\
            cut -d';' -f2 || true)

          # PR doesn't have a linked issue
          # (it should, but maybe a new user forgot to add a "Fixes #" commit).
          if [ -z "$linked_issue_url" ]; then
            echo "::error::No linked issue for PR $pr"
            # XXX: Careful - this works for now (this step will be aborted.
            # XXX: However, since this is exiting with success (as the linked
            # XXX: PR condition was not met, which isn't an error), *iff* further
            # XXX: steps are added to this action in future, they *will* be run as
            # XXX: this steps ends with success!
            exit 0
          fi

          issue_number=$(echo "$linked_issue_url"| awk -F\/ '{print $NF}' || true)
          [ -z "$issue_number" ] && \
            echo "::error::Cannot determine issue number from $linked_issue_url for PR $pr" && \
            exit 1

          project_name="Issue backlog"
          project_type="org"
          project_column="In progress"

          # Move the issue to the correct column on the project board
          kata-hub.sh \
            move-issue \
            "$issue" \
            "$project_name" \
            "$project_type" \
            "$project_column"
